[package]
name = "embedded-test"
version = "0.6.2"
edition = "2021"
repository = "https://github.com/probe-rs/embedded-test"
license = "MIT OR Apache-2.0"
keywords = ["embedded", "test", "testing", "test-runner", "test-framework"]
description = "A test harness and runner for embedded devices"
categories = ["embedded", "no-std", "development-tools::testing"]

[package.metadata.docs.rs]
default-target = "riscv32imac-unknown-none-elf"

[dependencies]
semihosting = { version = "0.1.7", features = ["args"], optional = true }
embedded-test-macros = { version = "0.6.1", path = "./macros" }
serde = { version = "1.0.193", default-features = false, features = ["derive"] }
serde-json-core = { version = "0.6.0", default-features = false }
heapless = { version = "0.8.0", default-features = false }

# Optional dependencies
defmt = { version = "1", optional = true }
log = { version = "0.4.20", optional = true }
embassy-executor = { git = "https://github.com/modulo-org/embassy", branch = "main", optional = true, default-features = false }


[features]
default = ["semihosting", "panic-handler"]

# use semihosting (for embedded targets)
semihosting = ["dep:semihosting"]

# use std functionality
std = []

# defines a panic-handler which will invoke `semihosting::process::abort()` on panic
panic-handler = []

# prints testcase exit result to defmt
defmt = ["dep:defmt"]

# prints testcase exit result to log
log = ["dep:log"]

# Enables async test and init functions using embassy-executor.
# Note: You need to enable at least one executor feature on embassy unless you are using the `external-executor` feature
embassy = ["embedded-test-macros/embassy", "dep:embassy-executor"]

# you will use your own executor by setting it via the `tasks` macro, e.g. `#[embedded_test::tests(executor = esp_hal::embassy::executor::thread::Executor::new())]`
external-executor = ["embedded-test-macros/external-executor"]

# Enables Ariel OS integration
ariel-os = ["embedded-test-macros/ariel-os", "embassy"]

# enables the xtensa-specific semihosting implementation
xtensa-semihosting = ["semihosting/openocd-semihosting"]
